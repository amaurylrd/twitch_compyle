name: Python CI

on:
  push:
    branches:
      - "**"

  pull_request:
    branches:
      - "**"

jobs:
  # TODO faudra git fetch le head
  renovate:
    name: Renovate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8b5e8b768746b50394015010d25e690bfab9dfbc
      - uses: ./.github/actions/renovate
      # if: github.event_name == 'pull_request'

  dependencies:
    name: Install Dependencies
    needs: [renovate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8b5e8b768746b50394015010d25e690bfab9dfbc
      - uses: ./.github/actions/cache

  quality:
    name: Quality
    needs: [dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8b5e8b768746b50394015010d25e690bfab9dfbc
      - uses: ./.github/actions/cache
      - uses: ./.github/actions/pre-commit
      - uses: ./.github/actions/bandit
      - uses: ./.github/actions/pylama

  test:
    name: Test
    needs: [dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8b5e8b768746b50394015010d25e690bfab9dfbc
      - uses: ./.github/actions/cache
      - uses: ./.github/actions/coverage # TODO cette fonction

  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency: release
    needs: [dependencies, quality, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore(release):')
    steps:
      - uses: actions/checkout@8b5e8b768746b50394015010d25e690bfab9dfbc
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: ./.github/actions/cache
      - uses: ./.github/actions/semantic-release


      # - name: Configure git
      #   run: |
      #     git config user.name github-actions
      #     git config user.email

      # - name: Run python semantic release
      #   run: |
      #     poetry run semantic-release changelog --post
      #     poetry run semantic-release version

      # - name: Publish semver
      #   run: poetry run semantic-release publish

      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      #     # semantic
